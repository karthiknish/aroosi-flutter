name: CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

env:
  FLUTTER_CHANNEL: stable
  FLUTTER_VERSION: '3.35.4'
  GOOGLESERVICE_INFO_PLIST_BASE64: ${{ secrets.GOOGLESERVICE_INFO_PLIST_BASE64 }}

jobs:
  test:
    name: Test, Analyze, Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create CI .env
        run: |
          cat <<'EOF' > .env
          ENVIRONMENT=staging
          API_BASE_URL=https://staging.aroosi.app/api
          FIREBASE_STORAGE_BUCKET=
          GOOGLE_WEB_CLIENT_ID=
          GOOGLE_IOS_CLIENT_ID=
          GOOGLE_ANDROID_CLIENT_ID=
          EOF

      - name: Cache pub cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test

      - name: Analyze code
        run: flutter analyze --no-fatal-warnings --no-fatal-infos

      - name: Format check
        run: dart format --set-exit-if-changed .

  build-android:
    name: Build Android APK
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Create CI .env
        run: |
          cat <<'EOF' > .env
          ENVIRONMENT=staging
          API_BASE_URL=https://staging.aroosi.app/api
          FIREBASE_STORAGE_BUCKET=
          GOOGLE_WEB_CLIENT_ID=
          GOOGLE_IOS_CLIENT_ID=
          GOOGLE_ANDROID_CLIENT_ID=
          EOF

      - name: Cache pub cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Build debug APK
        run: flutter build apk --debug

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  build-ios:
    name: Build iOS IPA
    needs: test
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: ${{ env.FLUTTER_CHANNEL }}
          flutter-version: ${{ env.FLUTTER_VERSION }}

      - name: Generate GoogleService-Info.plist
        if: ${{ env.GOOGLESERVICE_INFO_PLIST_BASE64 != '' }}
        run: |
          python3 - <<'PY'
          import base64, os, pathlib

          data = os.environ.get('GOOGLESERVICE_INFO_PLIST_BASE64', '').strip()
          if not data:
              raise SystemExit('GOOGLESERVICE_INFO_PLIST_BASE64 is empty')

          plist_path = pathlib.Path('ios/Runner/GoogleService-Info.plist')
          plist_path.parent.mkdir(parents=True, exist_ok=True)
          plist_path.write_bytes(base64.b64decode(data))

          print(f'Wrote {plist_path} from GOOGLESERVICE_INFO_PLIST_BASE64 secret')
          PY

      - name: Create CI .env
        run: |
          cat <<'EOF' > .env
          ENVIRONMENT=staging
          API_BASE_URL=https://staging.aroosi.app/api
          FIREBASE_STORAGE_BUCKET=
          GOOGLE_WEB_CLIENT_ID=
          GOOGLE_IOS_CLIENT_ID=
          GOOGLE_ANDROID_CLIENT_ID=
          EOF

      - name: Cache pub cache
        uses: actions/cache@v4
        with:
          path: ~/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-pub-

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS (no codesign)
        run: flutter build ipa --no-codesign

      - name: Upload IPA artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-ipa
          path: build/ios/ipa/*.ipa
