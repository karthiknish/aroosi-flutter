require 'base64'

default_platform(:ios)

platform :ios do
  desc "Upload App Store metadata (from repo)"
  lane :upload_metadata do
    app_identifier = ENV['IOS_APP_IDENTIFIER'] || 'com.aroosi.mobile'

    api_key_id = ENV['ASC_API_KEY_ID']
    issuer_id = ENV['ASC_API_KEY_ISSUER_ID']
    key_content = ENV['ASC_API_KEY_P8_BASE64']

    unless api_key_id && issuer_id && key_content
      UI.user_error!("ASC_API_KEY_ID, ASC_API_KEY_ISSUER_ID, and ASC_API_KEY_P8_BASE64 environment variables are required")
    end

    app_store_connect_api_key(
      key_id: api_key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      in_house: false
    )

    deliver(
      app_identifier: app_identifier,
      metadata_path: "./fastlane/metadata/ios",
      skip_screenshots: true,
      skip_binary_upload: true,
      submit_for_review: false,
      force: true
    )
  end

  desc "Deploy to TestFlight"
  lane :deploy_testflight do
    app_identifier = ENV['IOS_APP_IDENTIFIER'] || 'com.aroosi.mobile'

    api_key_id = ENV['ASC_API_KEY_ID']
    issuer_id = ENV['ASC_API_KEY_ISSUER_ID']
    key_content = ENV['ASC_API_KEY_P8_BASE64']

    unless api_key_id && issuer_id && key_content
      UI.user_error!("ASC_API_KEY_ID, ASC_API_KEY_ISSUER_ID, and ASC_API_KEY_P8_BASE64 environment variables are required")
    end

    app_store_connect_api_key(
      key_id: api_key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      in_house: false
    )

    # Build the app first
    build

    # Upload to TestFlight
    pilot(
      app_identifier: app_identifier,
      ipa: "./build/Runner.ipa",
      skip_submission: true,
      skip_waiting_for_build_processing: true
    )

    UI.success("Successfully uploaded to TestFlight!")
  end

  desc "Deploy to App Store"
  lane :deploy do
    app_identifier = ENV['IOS_APP_IDENTIFIER'] || 'com.aroosi.mobile'

    api_key_id = ENV['ASC_API_KEY_ID']
    issuer_id = ENV['ASC_API_KEY_ISSUER_ID']
    key_content = ENV['ASC_API_KEY_P8_BASE64']

    unless api_key_id && issuer_id && key_content
      UI.user_error!("ASC_API_KEY_ID, ASC_API_KEY_ISSUER_ID, and ASC_API_KEY_P8_BASE64 environment variables are required")
    end

    app_store_connect_api_key(
      key_id: api_key_id,
      issuer_id: issuer_id,
      key_content: key_content,
      in_house: false
    )

    # Build the app first
    build

    # Submit for review
    deliver(
      app_identifier: app_identifier,
      ipa: "./build/Runner.ipa",
      skip_metadata: true,
      skip_screenshots: true,
      submit_for_review: true,
      automatic_release: false,
      force: true,
      precheck_include_in_app_purchases: false
    )

    UI.success("Successfully submitted for App Store review!")
  end

  desc "Build iOS app for release"
  lane :build do
    # Clean previous builds
    sh("flutter clean")

    # Get dependencies
    sh("flutter pub get")

    # Build iOS
    sh("flutter build ios --release --no-codesign")

    # Setup CocoaPods if needed
    cocoapods(
      clean: true,
      podfile: "./Podfile"
    )

    # Archive the app
    gym(
      workspace: "Runner.xcworkspace",
      scheme: "Runner",
      configuration: "Release",
      output_directory: "./build",
      output_name: "Runner.ipa",
      clean: true,
      include_bitcode: false,
      include_symbols: true,
      export_method: "app-store"
    )

    UI.success("IPA built successfully!")
  end

  desc "Build and deploy to TestFlight"
  lane :release_testflight do
    deploy_testflight
  end

  desc "Build and deploy to App Store"
  lane :release do
    deploy
  end
end